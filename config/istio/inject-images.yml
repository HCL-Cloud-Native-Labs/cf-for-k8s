#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:json", "json")

#@ def istio_values_overlay():
global:
  proxy:
    #@overlay/replace
    image: #@ data.values.images.istio.proxy
  proxy_init:
    #@overlay/replace
    image: #@ data.values.images.istio.proxy
#@ end

#@ def overlay_istio_values(old, new):
#@   return json.encode(overlay.apply(json.decode(old), istio_values_overlay()))
#@ end

#@overlay/match by=overlay.subset({"kind":"ConfigMap", "metadata":{"namespace": "istio-system", "name": "istio-sidecar-injector"}})
---
data:
  #@overlay/replace via=overlay_istio_values
  values:

#@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"namespace": "istio-system", "name": "istiod"}})
---
spec:
  template:
    spec:
      containers:
      #@overlay/match by="name"
      - name: "discovery"
        image: #@ data.values.images.istio.pilot


#@overlay/match by=overlay.subset({"kind":"DaemonSet", "metadata":{"namespace": "istio-system", "name": "istio-ingressgateway"}})
---
spec:
  template:
    spec:
      containers:
      #@overlay/match by="name"
      - name: "istio-proxy"
        image: #@ data.values.images.istio.proxy