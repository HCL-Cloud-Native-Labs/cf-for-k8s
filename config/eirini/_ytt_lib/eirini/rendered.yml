---
apiVersion: v1
data:
  opi.yml: |
    opi:
      app_namespace: cf-workloads
      serve_plaintext: true
      plaintext_port: 8080
      tls_port: 8085
      cc_tls_disabled: true
      application_service_account: eirini
      registry_secret_name: registry-credentials
      allow_run_image_as_root: false
      unsafe_allow_automount_service_account_token: false
kind: ConfigMap
metadata:
  name: eirini
  namespace: cf-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Type: preresolved
          URL: index.docker.io/cloudfoundry/eirini-opi-cf-for-k8s@sha256:e01f4e2f012cbb701b7649757eb6e45215261d2e10279c4dd7a1c66e685817d0
        URL: index.docker.io/cloudfoundry/eirini-opi-cf-for-k8s@sha256:e01f4e2f012cbb701b7649757eb6e45215261d2e10279c4dd7a1c66e685817d0
  name: eirini-api
  namespace: cf-system
spec:
  selector:
    matchLabels:
      name: eirini-api
  template:
    metadata:
      labels:
        name: eirini-api
    spec:
      containers:
      - args:
        - connect
        - --config
        - /etc/eirini/config/opi.yml
        image: index.docker.io/cloudfoundry/eirini-opi-cf-for-k8s@sha256:e01f4e2f012cbb701b7649757eb6e45215261d2e10279c4dd7a1c66e685817d0
        imagePullPolicy: IfNotPresent
        name: opi
        ports:
        - containerPort: 8080
          name: http
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 20m
            memory: 20Mi
        volumeMounts:
        - mountPath: /etc/eirini/config
          name: config-map
        - mountPath: /etc/eirini/certs
          name: eirini-certs
        - mountPath: /etc/cf-api/certs
          name: cc-certs
      dnsPolicy: ClusterFirst
      securityContext:
        runAsNonRoot: true
      serviceAccountName: opi
      volumes:
      - configMap:
          name: eirini
        name: config-map
      - name: cc-certs
        secret:
          optional: true
          secretName: eirini-internal-tls-certs
      - name: eirini-certs
        secret:
          optional: true
          secretName: eirini-internal-tls-certs
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: eirini
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - ALL
  runAsUser:
    rule: MustRunAsNonRoot
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - configMap
  - emptyDir
  - projected
  - secret
  - downwardAPI
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opi
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eirini-cluster-role
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - list
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eirini-cluster-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eirini-cluster-role
subjects:
- kind: ServiceAccount
  name: opi
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-role
  namespace: cf-system
rules:
- apiGroups:
  - policy
  resourceNames:
  - eirini
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-rolebinding
  namespace: cf-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eirini-role
subjects:
- kind: ServiceAccount
  name: opi
  namespace: cf-system
---
apiVersion: v1
kind: Service
metadata:
  name: eirini
  namespace: cf-system
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
  selector:
    name: eirini-api
---
apiVersion: v1
data:
  instance-index-env-injector.yml: |
    # service_name is the name of the service used for serving the instance env injector webhook
    service_name: instance-index-env-injector

    # service_namespace is the namespace in which to run the instance env injector webhook service
    service_namespace: cf-system

    # service_port is the port used to service the instance env injector webhook service
    service_port: 8443
kind: ConfigMap
metadata:
  name: instance-index-env-injector
  namespace: cf-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Type: preresolved
          URL: index.docker.io/cloudfoundry/eirini-instance-index-env-injector-cf-for-k8s@sha256:1e02f94432ac86ebe7d5e0493e8f9c9a4a15be6ad118e6eee8b456e2d2d540be
        URL: index.docker.io/cloudfoundry/eirini-instance-index-env-injector-cf-for-k8s@sha256:1e02f94432ac86ebe7d5e0493e8f9c9a4a15be6ad118e6eee8b456e2d2d540be
  name: instance-index-env-injector
  namespace: cf-system
spec:
  selector:
    matchLabels:
      name: instance-index-env-injector
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        name: instance-index-env-injector
    spec:
      containers:
      - args:
        - connect
        - --config
        - /etc/eirini/config/instance-index-env-injector.yml
        - --execute-only
        image: index.docker.io/cloudfoundry/eirini-instance-index-env-injector-cf-for-k8s@sha256:1e02f94432ac86ebe7d5e0493e8f9c9a4a15be6ad118e6eee8b456e2d2d540be
        imagePullPolicy: IfNotPresent
        name: instance-index-env-injector
        ports:
        - containerPort: 8443
          name: https
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 20m
            memory: 20Mi
        volumeMounts:
        - mountPath: /etc/eirini/config
          name: config-map-volume
      securityContext:
        runAsNonRoot: true
      serviceAccountName: eirini-instance-index-env-injector
      volumes:
      - configMap:
          name: instance-index-env-injector
        name: config-map-volume
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
    kbld.k14s.io/images: |
      - Metas:
        - Type: preresolved
          URL: index.docker.io/cloudfoundry/eirini-instance-index-env-injector-cf-for-k8s@sha256:1e02f94432ac86ebe7d5e0493e8f9c9a4a15be6ad118e6eee8b456e2d2d540be
        URL: index.docker.io/cloudfoundry/eirini-instance-index-env-injector-cf-for-k8s@sha256:1e02f94432ac86ebe7d5e0493e8f9c9a4a15be6ad118e6eee8b456e2d2d540be
  name: instance-index-env-injector
  namespace: cf-system
spec:
  backoffLimit: 4
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - args:
        - connect
        - --config
        - /etc/eirini/config/instance-index-env-injector.yml
        - --register-only
        image: index.docker.io/cloudfoundry/eirini-instance-index-env-injector-cf-for-k8s@sha256:1e02f94432ac86ebe7d5e0493e8f9c9a4a15be6ad118e6eee8b456e2d2d540be
        imagePullPolicy: IfNotPresent
        name: instance-index-env-injector-registration
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 20m
            memory: 20Mi
        volumeMounts:
        - mountPath: /etc/eirini/config
          name: config-map-volume
      restartPolicy: Never
      securityContext:
        runAsNonRoot: true
      serviceAccountName: eirini-instance-index-env-injector-registrar
      volumes:
      - configMap:
          name: instance-index-env-injector
        name: config-map-volume
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: eirini-instance-index-env-injector
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - ALL
  runAsUser:
    rule: MustRunAsNonRoot
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - configMap
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eirini-instance-index-env-injector
  namespace: cf-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eirini-instance-index-env-injector-registrar
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eirini-instance-index-env-injector-registrar
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eirini-instance-index-env-injector-registrar
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eirini-instance-index-env-injector-registrar
subjects:
- kind: ServiceAccount
  name: eirini-instance-index-env-injector-registrar
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-instance-index-env-injector-psp
  namespace: cf-system
rules:
- apiGroups:
  - policy
  resourceNames:
  - eirini-instance-index-env-injector
  resources:
  - podsecuritypolicies
  verbs:
  - use
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-instance-index-env-injector-psp
  namespace: cf-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eirini-instance-index-env-injector-psp
subjects:
- kind: ServiceAccount
  name: eirini-instance-index-env-injector
  namespace: cf-system
- kind: ServiceAccount
  name: eirini-instance-index-env-injector-registrar
  namespace: cf-system
---
apiVersion: v1
kind: Service
metadata:
  name: instance-index-env-injector
  namespace: cf-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    name: instance-index-env-injector
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: eirini-x-mutating-hook
---
apiVersion: v1
data:
  task-reporter.yml: |
    cc_tls_disabled: true
    completion_callback_retry_limit: 10
    ttl_seconds: 5
kind: ConfigMap
metadata:
  name: task-reporter
  namespace: cf-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Type: preresolved
          URL: index.docker.io/cloudfoundry/eirini-task-reporter-cf-for-k8s@sha256:8afa3832f576f8c9dc7ca6185997a101997a6f4ea13322420c421e13b716a71d
        URL: index.docker.io/cloudfoundry/eirini-task-reporter-cf-for-k8s@sha256:8afa3832f576f8c9dc7ca6185997a101997a6f4ea13322420c421e13b716a71d
  name: eirini-task-reporter
  namespace: cf-system
spec:
  replicas: 2
  selector:
    matchLabels:
      name: eirini-task-reporter
  template:
    metadata:
      labels:
        name: eirini-task-reporter
    spec:
      containers:
      - args:
        - connect
        - --config
        - /etc/eirini/config/task-reporter.yml
        image: index.docker.io/cloudfoundry/eirini-task-reporter-cf-for-k8s@sha256:8afa3832f576f8c9dc7ca6185997a101997a6f4ea13322420c421e13b716a71d
        imagePullPolicy: IfNotPresent
        name: task-reporter
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 15m
            memory: 15Mi
        volumeMounts:
        - mountPath: /etc/eirini/config
          name: config-map-volume
        - mountPath: /etc/cf-api/certs
          name: cc-certs
      dnsPolicy: ClusterFirst
      securityContext:
        runAsNonRoot: true
      serviceAccountName: eirini-task-reporter
      volumes:
      - configMap:
          items:
          - key: task-reporter.yml
            path: task-reporter.yml
          name: task-reporter
        name: config-map-volume
      - name: cc-certs
        secret:
          optional: true
          secretName: eirini-internal-tls-certs
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: eirini-task-reporter
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - ALL
  runAsUser:
    rule: MustRunAsNonRoot
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - configMap
  - secret
  - projected
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eirini-task-reporter
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eirini-task-reporter
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eirini-task-reporter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eirini-task-reporter
subjects:
- kind: ServiceAccount
  name: eirini-task-reporter
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-task-reporter-psp
  namespace: cf-system
rules:
- apiGroups:
  - policy
  resourceNames:
  - eirini-task-reporter
  resources:
  - podsecuritypolicies
  verbs:
  - use
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-task-reporter-psp
  namespace: cf-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eirini-task-reporter-psp
subjects:
- kind: ServiceAccount
  name: eirini-task-reporter
  namespace: cf-system
---
apiVersion: v1
data:
  events.yml: |
    cc_internal_api: http://capi.cf-system.svc.cluster.local:9023
    cc_tls_disabled: true
kind: ConfigMap
metadata:
  name: eirini-event-reporter
  namespace: cf-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Type: preresolved
          URL: index.docker.io/cloudfoundry/eirini-event-reporter-cf-for-k8s@sha256:b44b96f1fdfc654b833c57213953f1f99c1cfa719b333139d0819484ccf0e975
        URL: index.docker.io/cloudfoundry/eirini-event-reporter-cf-for-k8s@sha256:b44b96f1fdfc654b833c57213953f1f99c1cfa719b333139d0819484ccf0e975
  name: eirini-event-reporter
  namespace: cf-system
spec:
  replicas: 2
  selector:
    matchLabels:
      name: eirini-event-reporter
  template:
    metadata:
      labels:
        name: eirini-event-reporter
    spec:
      containers:
      - args:
        - connect
        - --config
        - /etc/eirini-event-reporter/config/events.yml
        image: index.docker.io/cloudfoundry/eirini-event-reporter-cf-for-k8s@sha256:b44b96f1fdfc654b833c57213953f1f99c1cfa719b333139d0819484ccf0e975
        imagePullPolicy: IfNotPresent
        name: event-reporter
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 15m
            memory: 15Mi
        volumeMounts:
        - mountPath: /etc/eirini-event-reporter/config
          name: config-map-volume
        - mountPath: /etc/cf-api/certs
          name: cc-certs
      dnsPolicy: ClusterFirst
      securityContext:
        runAsNonRoot: true
      serviceAccountName: eirini-event-reporter
      volumes:
      - configMap:
          name: eirini-event-reporter
        name: config-map-volume
      - name: cc-certs
        secret:
          optional: true
          secretName: eirini-internal-tls-certs
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: eirini-event-reporter
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - ALL
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - configMap
  - secret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eirini-event-reporter
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: eirini-event-reporter-nodes-policy
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eirini-event-reporter
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - events
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: eirini-event-reporter-nodes-policy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eirini-event-reporter-nodes-policy
subjects:
- kind: ServiceAccount
  name: eirini-event-reporter
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eirini-event-reporter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eirini-event-reporter
subjects:
- kind: ServiceAccount
  name: eirini-event-reporter
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-event-reporter-psp
  namespace: cf-system
rules:
- apiGroups:
  - policy
  resourceNames:
  - eirini-event-reporter
  resources:
  - podsecuritypolicies
  verbs:
  - use
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-event-reporter-psp
  namespace: cf-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eirini-event-reporter-psp
subjects:
- kind: ServiceAccount
  name: eirini-event-reporter
  namespace: cf-system
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default,runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: eirini-workloads-app-psp
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - ALL
  runAsUser:
    rule: MustRunAsNonRoot
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
---
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  name: eirini
  namespace: cf-workloads
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-workloads-app-role
  namespace: cf-workloads
rules:
- apiGroups:
  - policy
  resourceNames:
  - eirini-workloads-app-psp
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-workloads-app-rolebinding
  namespace: cf-workloads
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eirini-workloads-app-role
subjects:
- kind: ServiceAccount
  name: eirini
  namespace: cf-workloads
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-namespaced-role
  namespace: cf-workloads
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-namespaced-rolebinding
  namespace: cf-workloads
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eirini-namespaced-role
subjects:
- kind: ServiceAccount
  name: opi
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-task-reporter-namespaced
  namespace: cf-workloads
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-task-reporter-namespaced
  namespace: cf-workloads
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eirini-task-reporter-namespaced
subjects:
- kind: ServiceAccount
  name: eirini-task-reporter
  namespace: cf-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini-event-reporter-namespaced
  namespace: cf-workloads
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini-event-reporter-namespaced
  namespace: cf-workloads
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eirini-event-reporter-namespaced
subjects:
- kind: ServiceAccount
  name: eirini-event-reporter
  namespace: cf-system
