---
apiVersion: v1
data:
  init.sh: ""
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: cf-db
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.1.1
  name: cf-db-postgresql-init-scripts
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: cf-db
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.1.1
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: cf-db-postgresql-headless
spec:
  clusterIP: None
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/instance: cf-db
    app.kubernetes.io/name: postgresql
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app.kubernetes.io/instance: cf-db
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.1.1
  name: cf-db-postgresql
spec:
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/instance: cf-db
    app.kubernetes.io/name: postgresql
    role: primary
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Tag: 11.10.0-debian-10-r9
          Type: resolved
          URL: docker.io/bitnami/postgresql:11.10.0-debian-10-r9
        URL: index.docker.io/bitnami/postgresql@sha256:eb8c097c62842822de29c7a80ddf02890f24f932e077c6880e4e73a434273c9c
  labels:
    app.kubernetes.io/instance: cf-db
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.1.1
  name: cf-db-postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: cf-db
      app.kubernetes.io/name: postgresql
      role: primary
  serviceName: cf-db-postgresql-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: cf-db
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.1.1
        role: primary
      name: cf-db-postgresql
    spec:
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: POSTGRESQL_PORT_NUMBER
          value: "5432"
        - name: POSTGRESQL_VOLUME_DIR
          value: /bitnami/postgresql
        - name: PGDATA
          value: /bitnami/postgresql/data
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: cf-db-admin-secret
        - name: POSTGRESQL_ENABLE_LDAP
          value: "no"
        - name: POSTGRESQL_ENABLE_TLS
          value: "no"
        - name: POSTGRESQL_LOG_HOSTNAME
          value: "false"
        - name: POSTGRESQL_LOG_CONNECTIONS
          value: "false"
        - name: POSTGRESQL_LOG_DISCONNECTIONS
          value: "false"
        - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
          value: "off"
        - name: POSTGRESQL_CLIENT_MIN_MESSAGES
          value: error
        - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
          value: pgaudit
        image: index.docker.io/bitnami/postgresql@sha256:eb8c097c62842822de29c7a80ddf02890f24f932e077c6880e4e73a434273c9c
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: cf-db-postgresql
        ports:
        - containerPort: 5432
          name: tcp-postgresql
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - -e
            - |
              exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
              [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
        securityContext:
          runAsUser: 1001
        volumeMounts:
        - mountPath: /docker-entrypoint-initdb.d/
          name: custom-init-scripts
        - mountPath: /docker-entrypoint-initdb.d/secret
          name: custom-init-scripts-secret
        - mountPath: /dev/shm
          name: dshm
        - mountPath: /bitnami/postgresql
          name: data
          subPath: null
      securityContext:
        fsGroup: 1001
      volumes:
      - configMap:
          name: cf-db-postgresql-init-scripts
        name: custom-init-scripts
      - name: custom-init-scripts-secret
        secret:
          secretName: cf-db-credentials
      - emptyDir:
          medium: Memory
          sizeLimit: 1Gi
        name: dshm
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
